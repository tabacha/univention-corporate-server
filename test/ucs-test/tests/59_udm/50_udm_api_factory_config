#!/usr/share/ucs-test/runner python
# -*- coding: utf-8 -*-
## desc: Run UDM API doctests
## exposure: dangerous
## roles: [domaincontroller_master]
## packages: [python-univention-directory-manager]

from __future__ import unicode_literals  # regex from str and unicode are not equal!
import univention.debug as ud
from univention.udm.factory_config import UdmModuleFactoryConfiguration, UdmModuleFactoryConfigurationStorage


ud.init('/var/log/univention/directory-manager-cmd.log', ud.FLUSH, 0)
ud.set_level(ud.ADMIN, ud.ALL)

config_storage = UdmModuleFactoryConfigurationStorage(False)
config_storage.refresh_config()  # set config_storage._persistence_date to prevent another refresh
config_storage._config = {}  # empty config
config1 = UdmModuleFactoryConfiguration('groups/.*', 'univention.udm.modules.generic', 'GenericUdm1Module')  # v1
config2 = UdmModuleFactoryConfiguration('^users/user$', 'univention.udm.modules.users_user', 'UsersUserUdm1Module')  # v1
config3 = UdmModuleFactoryConfiguration('^users/.*$', 'univention.udm.modules.generic', 'GenericUdm1Module')  # v0 & v1
config4 = UdmModuleFactoryConfiguration('^users/ldap$', 'univention.udm.modules.users_ldap_v0', 'UsersLdapUdm1Module')  # v0
config5 = UdmModuleFactoryConfiguration('^users/ldap$', 'univention.udm.modules.users_ldap_v1', 'UsersLdapUdm1Module')  # v1
config_storage.register_configuration(config1)
config_storage.register_configuration(config2)
config_storage.register_configuration(config3)
config_storage.register_configuration(config4)
config_storage.register_configuration(config5)

print('*** config_storage:\n{}'.format(
	'\n'.join('{!r}: {!r}'.format(k.pattern, v) for k, v in config_storage._config.iteritems())))

conf_res = config_storage.get_configuration('users/user', 0)
assert conf_res == UdmModuleFactoryConfiguration('^users/.*$', 'univention.udm.modules.generic', 'GenericUdm1Module')

conf_res = config_storage.get_configuration('users/user', 1)
assert conf_res == UdmModuleFactoryConfiguration('^users/user$', 'univention.udm.modules.users_user', 'UsersUserUdm1Module')

conf_res = config_storage.get_configuration('users/ldap', 0)
assert conf_res == UdmModuleFactoryConfiguration('^users/ldap$', 'univention.udm.modules.users_ldap_v0', 'UsersLdapUdm1Module')

conf_res = config_storage.get_configuration('users/ldap', 1)
assert conf_res == UdmModuleFactoryConfiguration('^users/ldap$', 'univention.udm.modules.users_ldap_v1', 'UsersLdapUdm1Module')

conf_res = config_storage.get_configuration('users/ldap', 2)
assert conf_res == UdmModuleFactoryConfiguration('users/ldap', 'univention.udm.modules.generic', 'GenericUdm1Module')

config_storage.unregister_configuration(config5)
conf_res = config_storage.get_configuration('users/ldap', 1)
assert conf_res == UdmModuleFactoryConfiguration('^users/.*$', 'univention.udm.modules.generic', 'GenericUdm1Module')

conf_res = config_storage.get_configuration('groups/group', 1)
assert conf_res == UdmModuleFactoryConfiguration('^groups/.*$', 'univention.udm.modules.generic', 'GenericUdm1Module')

conf_res = config_storage.get_configuration('computers/domaincontroller_master', 1)
assert conf_res == UdmModuleFactoryConfiguration('computers/domaincontroller_master', 'univention.udm.modules.generic', 'GenericUdm1Module')

config_storage.unregister_configuration(config2)
conf_res = config_storage.get_configuration('users/user', 1)
assert conf_res == UdmModuleFactoryConfiguration('^users/.*$', 'univention.udm.modules.generic', 'GenericUdm1Module')

config_storage.unregister_configuration(config3)
conf_res = config_storage.get_configuration('users/ldap', 1)
assert conf_res == UdmModuleFactoryConfiguration('users/ldap', 'univention.udm.modules.generic', 'GenericUdm1Module')

conf_res = config_storage.get_configuration('users/user', 1)
assert conf_res == UdmModuleFactoryConfiguration('users/user', 'univention.udm.modules.generic', 'GenericUdm1Module')
