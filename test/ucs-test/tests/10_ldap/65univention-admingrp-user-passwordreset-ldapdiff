#!/usr/share/ucs-test/runner python
## desc: univention-admingrp-user-passwordreset
## roles:
##  - domaincontroller_master
##  - domaincontroller_backup
## packages:
##  - univention-admingrp-user-passwordreset
## exposure: dangerous

import re
import subprocess
import univention.testing.udm as udm_test
from univention.testing.utils import fail
import univention.testing.utils as utils
import univention.config_registry
import univention.uldap as uldap
from univention.testing.ucr import UCSTestConfigRegistry as ConfigRegistry
import univention.testing.strings as uts

with udm_test.UCSTestUDM() as udm, ConfigRegistry() as ucr:

	udm.create_object('mail/domain',
		position='cn=domain,cn=mail,' + ucr.get('ldap/base'),
		set={
			'name': uts.random_string()
		}
	)

	# create helpdesk group
	try:
		hdgroup_dn, hdgroup = udm.create_group()
	except Exception:
		fail('cannot create U_HELPDESK user', 140)

	# create new user
	try:
		hduser_dn, hduser = udm.create_user()
	except Exception:
		fail('cannot create helpdesk user', 140)

	# add user to corresponding group
	udm.modify_object('groups/group',
			dn=hdgroup_dn,
			append={
				'users': [hduser_dn]
			})

	# create new protected test user
	try:
		prot_user_dn, prot_user = udm.create_user()
	except Exception:
		fail('cannot create user', 140)

	# deactivate LDAP ACL
	pattern = re.compile('^ldap\/acl\/user\/passwordreset\/accesslist\/groups.[^:]+')
	aclkey = ''
	aclvalue = ''
	for item in ucr.items():
		key, value = item
		match = re.search(pattern, key)
		if match:
			aclkey, aclvalue = key, value
			break
	univention.config_registry.handler_unset([key])

	## Activate passwordreset ACLs:
	cmd=["/etc/init.d/slapd", "crestart"]
	p1 = subprocess.Popen(cmd, close_fds=True)
	(stdout, stderr) = p1.communicate()
	if p1.returncode != 0:
		fail('Restarting slapd failed: %s' % stderr)

	# dump ldap
	lo_machine = uldap.getMachineConnection()
	lo_admin = uldap.getAdminConnection()
	print '==> Dumping LDAP without active ACL'
	ldif_anon_a = lo_machine.search()
	ldif_admin_a = lo_admin.search()

	# deactivate LDAP ACL
	univention.config_registry.handler_set([
		'ldap/acl/user/passwordreset/accesslist/groups/dn=%s' % hdgroup_dn,
		'ldap/acl/user/passwordreset/protected/uid="Administrator,%s"' % prot_user
	])

	# dump ldap
	print '==> Dumping LDAP with active ACL'
	ldif_anon_b = lo_machine.search()
	ldif_admin_b = lo_admin.search()

	print '==> Comparing output'
	if not ldif_anon_a == ldif_anon_b:
		fail('anonymous LDAP dump differs', 1)
	if not ldif_admin_a == ldif_admin_b:
		fail('admin LDAP dump differs', 1)

# vim: set filetype=python tabstop=4 :
