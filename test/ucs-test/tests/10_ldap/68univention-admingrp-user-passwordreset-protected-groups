#!/usr/share/ucs-test/runner python2.7
## desc: Test that ldap/acl/user/passwordreset/protected/gid members are protected
## roles-not:
##  - basesystem
## packages:
##  - python-univention-lib
## exposure: dangerous

from univention.testing.debian_package import DebianPackage
from univention.testing.utils import fail
import univention.config_registry
from univention.testing.ucr import UCSTestConfigRegistry
from univention.testing.udm import UCSTestUDM
import univention.testing.strings as uts
import subprocess
from univention.testing.ucr import UCSTestConfigRegistry as ConfigRegistry
import time

with UCSTestConfigRegistry() as ucr_test:
	ucr_test.load()

	with UCSTestUDM() as udm:
	
		#Create helpdesk user
		try:
			user_helpdesk_dn,user_helpdesk_name = udm.create_user(password ='univention')
		except Exception:
			fail('Creating user failed:')
		else:
			print 'Creating user succeeded:'
		
		#Create admin user
		try:
			user_admin_dn,user_admin_name = udm.create_user(password ='univention')
		except Exception:
			fail('Creating user failed:')
		else:
			print 'Creating user succeeded:'

		#Create user
		try:
			user_dn,user_name = udm.create_user(password ='univention')
		except Exception:
			fail('Creating user failed:')
		else:
			print 'Creating user succeeded:'

		#Create admin user2
		try:
			user_admin2_dn,user_admin2_name = udm.create_user(password ='univention')
		except Exception:
			fail('Creating user failed:')
		else:
			print 'Creating user succeeded:'

		#Create new admin group
		try:
			group_admin_dn, group_admin_name  = udm.create_group()
		except Exception:
			print 'cant create %s' %group_admin_name
		else:
			print 'created %s' %group_admin_name
		
		#add helpdesk user to User Password Admins group
		try:
			udm.modify_object("users/user",dn=user_helpdesk_dn,set={'groups' : ["cn=User Password Admins,cn=groups,%s"%(ucr_test["ldap/base"])]})
		except Exception:
			fail('cant add %s to admin group'%(user_helpdesk_dn))
		else:
			print 'added %s to admin group '%(user_helpdesk_dn)

		#add admin to admin group
		try:
			udm.modify_object("groups/group",dn=group_admin_dn,append={'users':[user_admin_dn]})
		except Exception:
			fail('cant add %s to admin group'%(user_admin_dn))
		else:
			print 'added %s to admin group '%(user_admin_dn)

		#set admin group as primary group for admin2
		try:
			udm.modify_object("users/user",dn=user_admin2_dn,set={'primaryGroup':[group_admin_dn]})
		except Exception:
			fail('cant set the  primary group %s, to admin group'%(user_admin2_dn))
		else:
			print 'set the primary group of %s to admin group '%(user_admin2_dn)
		
		univention.config_registry.handler_set([
				'ldap/acl/user/passwordreset/protected/gid=%s' % group_admin_name,
						])
		
		#Activate passwordreset ACLs:
		cmd=["/etc/init.d/slapd", "crestart"]
		p1 = subprocess.Popen(cmd, close_fds=True)
		(stdout, stderr) = p1.communicate()
		if p1.returncode != 0:
			fail('Restarting slapd failed: %s' % stderr)
		
		#wait for sldap restart
		time.sleep(35)

		#Test if Helpdesk user can reset password of admin
		try:
			udm.modify_object('users/user', binddn = user_helpdesk_dn, bindpwd ='univention', dn= user_admin_dn, set = {'password': uts.random_string(),'overridePWHistory': 1,'overridePWLength': 1})
		except Exception:
			print 'helpdesk user can not reset password of protected user admin'
		else:
			fail( 'helpdesk user resetted password of protected user admin, but should not be able to')

		#Test if Helpdesk user can reset password of admin2
		try:
			udm.modify_object('users/user', binddn = user_helpdesk_dn, bindpwd ='univention', dn= user_admin2_dn, set = {'password': uts.random_string(),'overridePWHistory': 1,'overridePWLength': 1})
		except Exception:
			print 'helpdesk user can not reset password of protected user admin2'
		else:
			fail( 'helpdesk user resetted password of protected user admin 2, but should not be able to')

		#Test if Helpdesk user can reset password of user
		try:
			udm.modify_object('users/user', binddn = user_helpdesk_dn, bindpwd ='univention', dn= user_dn, set = {'password': uts.random_string(),'overridePWHistory': 1,'overridePWLength': 1})
		except Exception:
			fail( 'helpdesk user can not reset password of unprotected user')
		else:
			print 'helpdesk user resetted password of unprotected user successfully'


# vi	m: set ft=python ts=7 noexpandtab :
