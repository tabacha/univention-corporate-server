#!/bin/sh
#
# Univention Directory Manager Modules
#  postinst script
#
# Copyright 2004-2018 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

. /usr/share/univention-lib/all.sh

eval "$(univention-config-registry shell)"

#DEBHELPER#

if [ "$1" = "configure" ]; then
	if [ -z "$2" ]; then
		# only set this for new installations
		univention-config-registry set \
			directory/manager/web/modules/users/user/properties/homePostalAddress/syntax=postalAddress \
			password/hashing/method?SHA-512
	fi

	univention-config-registry set \
		directory/manager/web/modules/groups/group/caching/uniqueMember/timeout?300 \
		directory/manager/user_group/uniqueness=true \
		directory/manager/templates/alphanum/whitelist?'' \
		password/hashing/method?MD5 # for update keep old behaviour

	if [ -n "$2" ]; then
		if dpkg --compare-versions "$2" lt-nl 9.0.22-10; then
			## load the listener module
			/etc/init.d/univention-directory-listener crestart
		elif dpkg --compare-versions "$2" lt-nl 10.0.21-1; then
			univention-directory-listener-ctrl resync udm_extension
		fi
	fi
fi

# TODO: create cmdline tool for this
# TODO: move to join script
#
# r"^.*/.*$" must be first, so it is chosen last!
python -c 'from univention.udm.factory_config import UdmModuleFactoryConfiguration, UdmModuleFactoryConfigurationStorage
config_storage = UdmModuleFactoryConfigurationStorage(True)
config_storage.register_configuration(UdmModuleFactoryConfiguration(r"^.*/.*$", "univention.udm.modules.generic", "GenericUdmModule"))
config_storage.register_configuration(UdmModuleFactoryConfiguration(r"^computers/.*$", "univention.udm.modules.computers_all", "ComputersAllUdmModule"))
config_storage.register_configuration(UdmModuleFactoryConfiguration(r"^appcenter/app$", "univention.udm.modules.appcenter_app", "AppcenterAppUdmModule"))
config_storage.register_configuration(UdmModuleFactoryConfiguration(r"^container/cn$", "univention.udm.modules.container_cn", "ContainerCnUdmModule"))
config_storage.register_configuration(UdmModuleFactoryConfiguration(r"^container/dc$", "univention.udm.modules.container_dc", "ContainerDcUdmModule"))
# no conversion required for container/msgpo
config_storage.register_configuration(UdmModuleFactoryConfiguration(r"^container/ou$", "univention.udm.modules.container_ou", "ContainerOuUdmModule"))
config_storage.register_configuration(UdmModuleFactoryConfiguration(r"^groups/group$", "univention.udm.modules.groups_group", "GroupsGroupUdmModule"))
config_storage.register_configuration(UdmModuleFactoryConfiguration(r"^nagios/service$", "univention.udm.modules.nagios_service", "NagiosServiceUdmModule"))
config_storage.register_configuration(UdmModuleFactoryConfiguration(r"^mail/.*$", "univention.udm.modules.mail_all", "MailAllUdmModule"))
config_storage.register_configuration(UdmModuleFactoryConfiguration(r"^policies/registry$", "univention.udm.modules.policies_registry", "PoliciesRegistryUdmModule"))
config_storage.register_configuration(UdmModuleFactoryConfiguration(r"^policies/share_userquota$", "univention.udm.modules.policies_share_userquota", "PoliciesShareUserquotaUdmModule"))
config_storage.register_configuration(UdmModuleFactoryConfiguration(r"^policies/umc$", "univention.udm.modules.policies_umc", "PoliciesUmcUdmModule"))
config_storage.register_configuration(UdmModuleFactoryConfiguration(r"^saml/serviceprovider$", "univention.udm.modules.saml_serviceprovider", "SamlServiceproviderUdmModule"))
config_storage.register_configuration(UdmModuleFactoryConfiguration(r"^settings/directory$", "univention.udm.modules.settings_directory", "SettingsDirectoryUdmModule"))
config_storage.register_configuration(UdmModuleFactoryConfiguration(r"^settings/portal$", "univention.udm.modules.settings_portal", "SettingsPortalUdmModule"))
config_storage.register_configuration(UdmModuleFactoryConfiguration(r"^settings/portal_entry$", "univention.udm.modules.settings_portal_entry", "SettingsPortalEntryUdmModule"))
config_storage.register_configuration(UdmModuleFactoryConfiguration(r"^users/contact$", "univention.udm.modules.users_user", "UsersUserUdmModule"))
config_storage.register_configuration(UdmModuleFactoryConfiguration(r"^users/ldap$", "univention.udm.modules.users_user", "UsersUserUdmModule"))
config_storage.register_configuration(UdmModuleFactoryConfiguration(r"^users/user$", "univention.udm.modules.users_user", "UsersUserUdmModule"))'

stop_udm_cli_server

call_joinscript 18python-univention-directory-manager.inst

exit 0
